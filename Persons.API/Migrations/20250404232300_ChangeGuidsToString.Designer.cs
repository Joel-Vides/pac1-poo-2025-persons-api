// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persons.API.Database;

#nullable disable

namespace Persons.API.Migrations
{
    [DbContext(typeof(PersonsDBContext))]
    [Migration("20250404232300_ChangeGuidsToString")]
    partial class ChangeGuidsToString
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("Persons.API.Database.Entities.CountryEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("AlphaCode3")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("alpha_code_3");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_by");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_date");

                    b.HasKey("Id");

                    b.ToTable("countries");
                });

            modelBuilder.Entity("Persons.API.Database.Entities.FamilyMemberEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("last_name");

                    b.Property<string>("PersonId")
                        .HasColumnType("TEXT")
                        .HasColumnName("person_id");

                    b.Property<string>("Relationship")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("relationship");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("family_group");
                });

            modelBuilder.Entity("Persons.API.Database.Entities.PersonEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("CountryId")
                        .HasColumnType("TEXT")
                        .HasColumnName("country_id");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_date");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("dni");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("first_name");

                    b.Property<string>("Gender")
                        .HasColumnType("TEXT")
                        .HasColumnName("gender");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("last_name");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_by");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_date");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Persons.API.Database.Entities.FamilyMemberEntity", b =>
                {
                    b.HasOne("Persons.API.Database.Entities.PersonEntity", "Person")
                        .WithMany("FamilyGroup")
                        .HasForeignKey("PersonId");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Persons.API.Database.Entities.PersonEntity", b =>
                {
                    b.HasOne("Persons.API.Database.Entities.CountryEntity", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Persons.API.Database.Entities.PersonEntity", b =>
                {
                    b.Navigation("FamilyGroup");
                });
#pragma warning restore 612, 618
        }
    }
}
